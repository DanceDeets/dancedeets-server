#def fb_login_button
<fb:login-button length="long" onclick="preSignUp();return false;" onlogin="signUp();" scope="$fb_permissions"></fb:login-button>
#end def

#def signup_form($next)
<form action="/login" id="signup-form" method="post" onsubmit="return FB.Cookie.load() != undefined;">
<fieldset style="border: 1px black solid; background-color: #eee;border-radius: 10px">

<legend class="big-font" style="padding: 0px 10px;background-color:white;border:1px solid darkgrey">Join the scene</legend>

<div>Get notified about events you care about!</div>

<div><input type=hidden name="next" value="$format_html($next)"></div>

#if $needs_city
<div style="color: red">Please fill out your city below:</div>
<style type="text/css">
#signup-city {
	background-color: #ff8888;
}
</style>
#end if
<b>City:</b> <input type=text name="city" id="signup-city">

<p>$fb_login_button()
<!--TODO(lambert): add read_stream to get access to a bunch more streams/feeds out there? maybe just for Mike Lambert's magic token? what about friend_events...doesn't appear necessary?-->
</fieldset>
</form>

<div id="complete_why_facebook">

<p>DanceDeets uses Facebook Login, so you'll need to allow permissions to join the scene. We promise no hacking or unauthorized wall posts or invites!

<p><a href="#" style="font-size:80%" onclick="$('#why_facebook').toggle();return true;">Why does DanceDeets use Facebook login?</a>

<div id="why_facebook" style="display:none">

<p>DanceDeets uses Facebook for a few reasons:
<ul>
<li>You don't need to create a special account for this site (new username, password, email address, location, etc)
<li>DanceDeets is a registry of Facebook events, which means it is built on top of the Facebook API, and requires you to login to work according to the Facebook Terms of Service.
</ul>

<p><a href="#" style="font-size:80%" onclick="$('#facebook_perms').toggle();return true;">Why does DanceDeets need so many Facebook permissions?</a>

<div id="facebook_perms" style="display:none">
<ul>
<li><span class="permission-name">Access my public information</span>: <span class="permission-reason">show you which of your friends are attending dance events.</span>
<li><span class="permission-name">Send me email</span>: <span class="permission-reason">emails you about upcoming dance events that meet your criteria and interest.</span>
<li><span class="permission-name">Access my data any time</span>: <span class="permission-reason">lets you get weekly emails with upcoming event info, even if you haven't been to www.dancedeets.com recently.</span>
<li><span class="permission-name">Manage my events</span>: <span class="permission-reason">lets you click "Attending" and add facebook events directly from DanceDeets.</span>
<li><span class="permission-name">Access my profile information (Events)</span>: <span class="permission-reason">shows you what events you are attending (or not attending).</span>
<li><span class="permission-name">Access my contact information (Current Location)</span>: <span class="permission-reason">only shows you dance events in your area.</span>
</ul>
</div>
</div>
</div>
#end def


#def signup_form_javascript
## necessary for google.loader.ClientLocation
<script src="http://www.google.com/jsapi" type="text/javascript"></script>
<script type="text/javascript">

	function getSignupLocation() {
		var short_city = '';
		var city = "";
		if (google.loader.ClientLocation &&
			google.loader.ClientLocation.address) {
			city = (
				google.loader.ClientLocation.address.city + " " +
				google.loader.ClientLocation.address.region  + " " +
				google.loader.ClientLocation.address.country_code
			);
		}
		$('#signup-city').val(city);
	}
	google.setOnLoadCallback(getSignupLocation);
	var must_allow_perms;
	$(document).ready(function() {
		must_allow_perms = $('#complete_why_facebook')
			.dialog({
				autoOpen: false,
				title: 'Facebook Permissions',
				closeOnEscape: true,
				modal: true,
				height: 400,
				width: 600,
			});
	});
</script>
#end def

#def fb_javascript($next='')
<script src="/vjs/$version/jquery.cookie.js"></script>
<div id="fb-root"></div>
<script type="text/javascript">
	(function() {
		var e = document.createElement('script'); e.async = true;
		e.src = document.location.protocol +
			'//connect.facebook.net/en_US/all.js';
		document.getElementById('fb-root').appendChild(e);
	}());

	function deleteLoginCookies() {
		$.removeCookie('fbsr_${app_id}')
		$.removeCookie('user_login')
	}

	function reloadWithNewToken() {
		if (String(window.location).indexOf('?') != -1) {
			window.location = window.location + '&new_token=1';
		} else {
			window.location = window.location + '?new_token=1';
		}
	}
	function currentUser() {
		var user_login = $.cookie('user_login');
		if (user_login) {
			var a = user_login;
			var b = JSON.parse(a);
			var c = JSON.parse(user_login)['uid'];
			return JSON.parse(user_login)['uid'];
		}
	}

	function logout() {
		FB.logout(function(response) {
			deleteLoginCookies();
			window.location.reload();
		});
	}
	function handleStatusChange(response) {
	alert(reponse.status);
		if (response.status === 'connected') {
			if (response.authResponse.userID != currentUser()) {
				// reload through endpoint to set up new user cookie serverside
				// TODO(lambert): Add a full-screen overlay explaining what we are doing...
				reloadWithNewToken();
			}
		} else if (response.status === 'not_authorized') {
			// the user is logged in to Facebook, but not connected to the app
			deleteLoginCookies();
			// TODO(lambert): Add a full-screen overlay explaining what we are doing...
			reloadWithNewToken();
		} else {
			// the user isn't even logged in to Facebook.
		}
	}
	function preSignUp() {
		_gaq.push(['_trackEvent', 'Signup', 'Opened FB Signup Window']);
	}
	function signUp() {
		_gaq.push(['_trackEvent', 'Signup', 'Closed FB Signup Window']);
		FB.getLoginStatus(function(response) {
			if (!response.authResponse) {
				// TODO(lambert): LOGIN: Do a better job of re-requesting permissions via auth_type: rerequest on the login() call?
				must_allow_perms.dialog('open');
			} else {
				_gaq.push(['_trackEvent', 'Signup', 'Authorized Permissions']);
				reloadWithNewToken();
			}
		});
	}
	window.fbAsyncInit = function() {
		FB.init({appId: '$app_id', status: true, cookie: true, xfbml: true});
		FB.Event.subscribe('auth.statusChange', handleStatusChange);
	};
</script>
#end def

