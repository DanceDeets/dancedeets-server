#def signup_form($next)
<form action="/login" id="signup-form" method="post" onsubmit="return FB.Cookie.load();">
<fieldset style="border: 1px black solid; background-color: #eee;border-radius: 10px">

<legend class="big-font" style="padding: 0px 10px;background-color:white;border:1px solid darkgrey">Join the scene</legend>

<div>Get notified about events you care about!</div>

<div><input type=hidden name="next" value="$format_html($next)"></div>

#if $needs_city
<div style="color: red">Please fill out your city below:</div>
<style type="text/css">
#signup-city {
	background-color: #ff8888;
}
</style>
#end if
<b>City:</b> <input type=text name="city" id="signup-city">

<p><b>Who are you in the scene?</b>
<ul style="list-style-type: none">
<li><input type=radio name=user_type value="fan"> I watch dance events
<li><input type=radio name=user_type value="choreo"> I do hiphop choreo
<li><input type=radio name=user_type value="freestyle"> I do freestyle dance
<li><input type=radio name=user_type value="everything" checked> I love all dance
</ul>

<p><fb:login-button length="long" onlogin="signUp();" perms="user_location,rsvp_event,offline_access,email,user_events"></fb:login-button>

</fieldset>
</form>

<div id="complete_why_facebook">

<p>DanceDeets uses Facebook Login, so you'll need to allow permissions to join the scene. We promise no hacking or unauthorized wall posts or invites!

<p><a href="#" style="font-size:80%" onclick="$('#why_facebook').toggle();return true;">Why does DanceDeets use Facebook login?</a>

<div id="why_facebook" style="display:none">

<p>DanceDeets uses Facebook for a few reasons:
<ul>
<li>You don't need to create a special account for this site (new username, password, email address, location, etc)
<li>DanceDeets is a registry of Facebook events, which means it is built on top of the Facebook API, and requires you to login to work according to the Facebook Terms of Service.
</ul>

<p><a href="#" style="font-size:80%" onclick="$('#facebook_perms').toggle();return true;">Why does DanceDeets need so many Facebook permissions?</a>

<div id="facebook_perms" style="display:none">
<ul>
<li><span class="permission-name">Access my public information</span>: <span class="permission-reason">show you which of your friends are attending dance events.</span>
<li><span class="permission-name">Send me email</span>: <span class="permission-reason">emails you about upcoming dance events that meet your criteria and interest.</span>
<li><span class="permission-name">Access my data any time</span>: <span class="permission-reason">lets you get weekly emails with upcoming event info, even if you haven't been to www.dancedeets.com recently.</span>
<li><span class="permission-name">Manage my events</span>: <span class="permission-reason">lets you click "Attending" and add facebook events directly from DanceDeets.</span>
<li><span class="permission-name">Access my profile information (Events)</span>: <span class="permission-reason">shows you what events you are attending (or not attending).</span>
<li><span class="permission-name">Access my contact information (Current Location)</span>: <span class="permission-reason">only shows you dance events in your area.</span>
</ul>
</div>
</div>
</div>
#end def


#def signup_form_javascript
<script type="text/javascript">

	function getSignupLocation() {
		var short_city = '';
		var city = "";
		if (google.loader.ClientLocation &&
			google.loader.ClientLocation.address) {
			city = (
				google.loader.ClientLocation.address.city + " " +
				google.loader.ClientLocation.address.region  + " " +
				google.loader.ClientLocation.address.country_code
			);
		}
		$('#signup-city').val(city);
	}
	google.setOnLoadCallback(getSignupLocation);
	var must_allow_perms;
	$(document).ready(function() {
		must_allow_perms = $('#complete_why_facebook')
			.dialog({
				autoOpen: false,
				title: 'Facebook Permissions',
				closeOnEscape: true,
				modal: true,
				height: 400,
				width: 600,
			});
	});
</script>
#end def

#def fb_javascript
<div id="fb-root"></div>
<script type="text/javascript">
  (function() {
    var e = document.createElement('script'); e.async = true;
    e.src = document.location.protocol +
      '//connect.facebook.net/en_US/all.js';
    document.getElementById('fb-root').appendChild(e);
  }());

  function getLoginStatus(response) {
		## We might need some way to communicate to the server "hey we have offline_access, please clean out the user expired_oauth_token bits and don't redirect them back to /login"
    if (response.session && (!response.perms || response.perms.indexOf('offline_access') != -1) && 0 && $attempt_autologin) {
			#if $next
				window.location = '$format_js($next)';
			#else
				window.location.reload();
			#end if
    }
  }
  function signUp() {
		FB.getLoginStatus(function(response) {
			if (!response.session) {
				must_allow_perms.dialog('open');
			// Can't distinguish which button was pressed, so we can't enforce city fillout clientside
			//} else if (!$('#signup-city').val()) {
			//	alert("Please fill out your city and try again.");
			} else {
				if ($('#signup-form')) {
					$('#signup-form').submit();
				} else {
					window.location.reload();
				}
			}
		});
  }
  window.fbAsyncInit = function() {
		// Override cookie-expiration setting so we get long-lived cookies.
		original_setRaw = FB.Cookie.setRaw;
		FB.Cookie.setRaw = function(val, ts, domain) {
			// ts may be 0, so we need to fix that up here:
			if (!ts) {
				ts = ((new Date()).getTime() / 1000) + 14 * 24 * 60 * 60;
			}
			return original_setRaw(val, ts, domain);
		}
		FB.Cookie.clear = function() {
			FB.Cookie.setRaw('', 1, FB.Cookie._domain);
		}

		FB.init({appId: '$api_key', status: true, cookie: true, xfbml: true});
		#if not $fb_user
      ## only subscribe to login-status notifications if we're logged out, otherwise we get in an infinite loop
			FB.Event.subscribe('FB.loginStatus', getLoginStatus);
		#end if
	};
</script>
#end def

