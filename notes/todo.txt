BEFORE LAUNCH:

- If we port to EC2, use http://appscale.cs.ucsb.edu/appengine.html

- Automatic CSS resizing for mobile screens:
Use http://twitter.github.com/bootstrap/, but tweak it a la the following:
http://getskeleton.com/
http://getskeleton.com/src/stylesheets/skeleton.css

- MapReduce InputFilter Ideas:
+ do more work in the input_reader to load fb_event data for us automatically. perhaps even do it in batch to save on CPU time.

- Ensure this matches:
http://www.dancedeets.com/events/admin_edit?event_id=206267406110368
'choreography workshops lounge'
http://www.dancedeets.com/events/admin_edit?event_id=228216297195689
'dance hip hop stage'?
http://www.dancedeets.com/events/admin_edit?event_id=246805922037836
'hip hopu, poppingu' - need to translate...
http://www.dancedeets.com/events/admin_edit?event_id=108583275913497
http://www.dancedeets.com/events/admin_edit?event_id=143985709032212
http://www.dancedeets.com/events/admin_edit?event_id=282582811759681
http://www.dancedeets.com/events/admin_edit?event_id=266608366706476
http://www.dancedeets.com/events/admin_edit?event_id=124645687637460
http://www.dancedeets.com/events/admin_edit?event_id=166047916808660
http://www.dancedeets.com/events/admin_edit?event_id=257024251003490
'workshopy'
http://www.dancedeets.com/events/admin_edit?event_id=214726508585136
http://www.dancedeets.com/events/admin_edit?event_id=224488204279017
http://www.dancedeets.com/events/admin_edit?event_id=140996745991450
http://www.dancedeets.com/events/admin_edit?event_id=234728589917096
http://www.dancedeets.com/events/admin_edit?event_id=263695657005390
http://www.dancedeets.com/events/admin_edit?event_id=222782557786103
http://www.dancedeets.com/events/admin_edit?event_id=258452520867371
http://www.dancedeets.com/events/admin_edit?event_id=166840623406160
http://www.dancedeets.com/events/admin_edit?event_id=283649694988640
http://www.dancedeets.com/events/admin_edit?event_id=248228508559362
http://www.dancedeets.com/events/admin_edit?event_id=124580344312372
http://www.dancedeets.com/events/admin_edit?event_id=193362027404244
http://www.dancedeets.com/events/admin_edit?event_id=294207553931329
http://www.dancedeets.com/events/admin_edit?event_id=109967295779417
http://www.dancedeets.com/events/admin_edit?event_id=297213826966950
http://www.dancedeets.com/events/admin_edit?event_id=227428607325354
http://www.dancedeets.com/events/admin_edit?event_id=262842063765336
http://www.dancedeets.com/events/admin_edit?event_id=325031654175010

- Use prospective search for finding events created in the time-since-emails-generated, and write out real-time notifications to users about them:
http://code.google.com/appengine/docs/python/prospectivesearch/overview.html

- Determine quality level by looking at fraction of potentialevents from a source led to a real event. If zero or near-zero, stop processing the feed entirely.
- But beware that "zero feed_history sources aren't discarded forever here, they just haven't ever been scraped yet, and could change in the future. But maybe mark them separately since they're not worth scraping in the shortterm.
- And beware items that have only been scraped for so-long. use a time-created field to give an item X amount of time before we give up on it.

- Determine rate-of-processing by looking at length_in_seconds, and fetch short feeds faster. Necessary for reducing load and scaling up sources.

- Maybe do a potential-explore for more sources. Find attendings of events, put in a big queue. Check them for any-good-events-at-all-on-feed, and if so add them as sources too. But don't put these in a periodic recrawl or it'd kill the system with a bajillion sources. But create Sources so we know not to recrawl them. Store last-crawl time?

- Use real-time API:
https://developers.facebook.com/docs/reference/api/realtime/
- for subscribing to all our Source feeds, so we get notified when posts happen (instead of relying on huge polling scrapes)
- for subscribing to our user information and calling user.compute_derived_properties() so we have up-to-date-info all the time (doesn't help with user_events though)
- ensure that anything that comes in via a subscribe endpoint, has a retry handler that will retry any URL that 500s, so we don't lose update info

- Separate out 'created by person X' from 'posted on X's wall by other person'. Why? Because owners-of-events, I want to trust other-events-they-created higher than other-events-ppl-posted? Perhaps this is not that relevant, as people are in the scene or not pretty straightforward."story": "Robert Creer created an event."

- Actually, would be interesting to count number of unique attendings on all events in the system so far. Group them by city to judge the size of scenes over the past year. Nice pretty statistics?

- Use SMS API from Twilio to offer "get me upcoming events" (24 hours? next 5 events? etc?) and "what is the info about this event queries?"
http://www.twilio.com/pricing/

- Use keyword density as another factor in identifying usefulness. and "does this words appear on a line of text by itself"

- Post on walls of events about dancedeets for promotion: http://developers.facebook.com/docs/reference/api/event/
- Auto-invite users to events of interest to them: http://developers.facebook.com/docs/reference/api/event/

- Validate input for user location before we save their user info to the db.

- Better location-detection for events on context: http://www.dancedeets.com/events/admin_edit?event_id=220778374616332
http://www.dancedeets.com/events/admin_edit?event_id=191039400964294
http://www.dancedeets.com/events/admin_edit?event_id=247636005284340
- Owned events auto-classify: http://www.dancedeets.com/tools/owned_events?owner_id=1199227781

- Add Tumblr integration to auto-post to blogs: http://www.tumblr.com/docs/en/api
- Grab list of places-he-posts-to from https://www.facebook.com/lifestyledance?sk=wall to get better european coverage

- Add Send Dialog to message event owners, and allow people to share with their friends. https://developers.facebook.com/docs/reference/dialogs/send/

OAuth2 migration:
https://developers.facebook.com/docs/guides/mobile/web/
https://developers.facebook.com/blog/post/525/ # oauth2 login
https://developers.facebook.com/docs/reference/javascript/FB.login/
https://developers.facebook.com/docs/reference/javascript/FB.getLoginStatus/
https://developers.facebook.com/blog/post/576/ # checking credentials


event-scraping-from-walls project:
- store an autoclassified boolean, so we don't train on those
- only autoclassify events with strong locations. or separate out 'location' from 'what type of event', so we can approach them independently (separate queues, etc)
- keep track of source of source-page-id as a unique field, then we can query them for events-from-user to know if it's worth crawling (or store time, so we know frequency and can use that to estimate crawl frequency)
- for each event that gets posted-and-crawled, grab the poster-of-event too, to add to our crawl. should give better freestyle/choreo classifying too
- when trying to figure out the worth of crawling a given page/person, maybe-discount things where we crawl the poster too (as they are not unique-or-interesting to crawl). but don't discount entirely, as they may be a source to find new events or posters in the future.
- what percentage of events on a page are dance-events versus not. some are more dance-only pages than others. may want to feed into prioritization system.
- when we see an event via multiple avenues, retain information about each avenue used to discover the event

- build a queue for events-to-clarify-location along with an "unknown", "educated guess" (city name appears in their event-location field), "previously classified", etc. looking for fast confirmation/agreement on these pages.
- if we have city/state/country name from facebook, then we can ignore the street adress and prepended bits when attempting to auto-classify, it's of no use

- can list out people-that-organize-events-in-a-given-area, to help people travelling to an area book an event workshop, or people local setup/book some performance
- figure out best way to do auto-classifying that leads back into existing augmenting of data (better event style, better location/city, etc). do on PotentialEvent save? using appengine queues? something else?

- city pages' past-tabs do not work and require login

- Expired auth tokens, keep getting links to cities, but can't view them because we direct back to /login.
- make 'ongoing' events use local timezone on client instead of server timezone
- login button for non-existant user doesn't work, semi-logs-in-with-permission in half-broken state

Classification:
- google classification API doesn't work well?
- trying to use manual rules, appears I can't get any 100% accurate rules. Blah.
- maybe do very manual rules. event-name keyword, creator, mark a certain way. only 5-10% of events will be solved by creator though :(
- need to translate to english before applying language classifiers. should fix up 'stage' crap
- remove 'club' as an option unless it's super strong (locking, popping, bboy, etc). then rely on manually-repeating-classified clubs to get club events (since often that's the only way to know a local scene)

- in the event of <3 events (or zero events and switched to past tab), suggest they increase their search radius (or decrease their threshold on num-attendees or dance-style).
- Or if they know someone from their city who is well-connected, convince them to sign up for the site.
- Maybe let the user facilitate posting on their wall to incite them to sign up.

- NEARBY_DISTANCE_KM?

- allow refreshing of deleted events since 'deletion' appears to be transitory, sigh. stupid fb.

- sign up and we'll represent you and your dance scene
- benefits of signing up in upper right corner

- auto-categorizing repeat events, or events with obvious keywords
- add mark-as-unknown, mark-as-no as well. make sure unknown "sticks
around" past the usual "mark as processed", until the user explicitly
categories it, or clicks marks-as-no on it.

-- add find-more-events link to make it clear how to search for more
- everyone else should just redirect to fb page

- logged out page shows all events, somehow highlight location selector
- hover-overs for event selectors

- rankings view, organize by country?

- figure out how to simplify signup page to top right? make the signup link (if not yet registered) ask a couple follow-up questions prefilled...?

MORE DOWN THE LINE:

- maybe add optional links for large flyers?


- support non-facebook login via http://developers.facebook.com/docs/plugins/registration ?

- add comments via http://developers.facebook.com/docs/reference/plugins/comments
- or via graph.facebook.com/event/feed on http://developers.facebook.com/docs/reference/api/event

- for timezones, use "must be within same country" rule
- attending counts on dancedeets
- set filters on a per event type basis?
- do a better logged out experience. no need to log in to use the site.

- Do something about the emails so that people in lesser-activity
areas get emailed less frequently, and only when necessary. Or stick
with weekly-on-wednesday emails for now?

- rss feed
- use search-system to page through all-events periodically, using title-keywords (trained? something else? to identify new events) http://developers.facebook.com/docs/api
- somehow expose all-upcoming-events-in-the-world view: a la http://www.dancedeets.com/?user_location=Katowice,+Poland&distance=10000&distance_units=miles&freestyle=FREESTYLE_DANCER&choreo=CHOREO_DANCER
- train system to identify dance events versus not. use negative keywords to filter out salsa/lindy stuff.
http://code.google.com/apis/predict/docs/getting-started.html
http://code.google.com/apis/storage/docs/getting-started.html
- get rid of club events maybe? or second category that must be manually added? untrainable?
- use list-of-attendees as a classifier in training event types as well. good for choreo hiphop.
- maybe build system for "area leaders". they can approve/updaate/change events in their area. fix geocodes. nice admin-overview page, status of number-of-people, events to process

- attach youtube videos of the events
- add keywords per event. use them to look up videos, maybe with upload times <6months after event (to catch "yearly" event problems)
- build an event classifier to autoclassify videos as dance videos or not

- Handle XSRF properly

- groupon emails as an example of call-to-action emails

- Revisit emails:
- add rankings in right-hand-column
- add call-to-action in right-hand-column

- "Want to do better?" links from rankings page to promote to fb friends
- track email-redirects to see who reads emails

- add rankings of more types to the rankings page, perhaps by splitting up the rankings page
- send daily email of http://www.dancedeets.com/events/admin_potential_events
- "Post this to your wall?" after rsvp-ing for an event. Promo for DanceDeets via "Dolapo found Yoruba Dance Sessions on DanceDeets"
- share-event-on-facebook link. http://developers.facebook.com/docs/reference/fql/permissions and http://developers.facebook.com/docs/guides/attachments and publich_stream attachment
- Send messages via fb not email. Perhaps using fan pages?

LAUNCH PLAN:
- Post on my facebook every other day, at different times of day.
- Post on friends' walls who haven't signed up yet. Work my way up to the dancers that I know less.
- Try to reach people who promote events. search email for "invited you to". carlo, cj, char, jon malave, joanne, (conrad and voodoo?), shoey (nyc choreo scene?), agatha, robnasty, vienna, phoenix, main stacks, thecompany, main ingredient, inhumanoids, open house, allthewaylive, eric groove, francis llave, sandy lee, dennis infante, 
- Post on tumblr and get friends to reblog it.
- Email onecypher, mindbodyflo, firstclass arts, movement lifestyle, etc
- Post on boogiezone, westcoastpoppin, bboyworld, bboy.org, breakernyc, streetdance.cz, etc.
- Create flyers, hand out in NYC, SF, everywhere I go.
- Create facebook advertisements

LONGER TERM:
- embed widget
- Add some stats on "users that see a given event", to make a compelling case for promoters to put events on this site.
- Some way to find users who have created events, and directly incite them to add to dance deets?
- allow override on timezone/scene/etc for users where we get it wrong

- music venues, good events, using classifier
- going through theater, arts, live music, etc
- programmer-tech-meet-up events

- video hosting, use youtube+vimeo apis to aggregate. group by event, by performer, by group, etc
- live streaming events with kyte, aggregate for others to virtually 'attend'
- simple mobile apps around html-frames

